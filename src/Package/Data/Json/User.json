{
  "User" : {
    "options": "{{options()}}",
    "class": "{{$this.options.class}}",
    "use" : [
      "R3m\\Io\\App",
      "R3m\\Io\\Module\\Response",
      "R3m\\Io\\Module\\Controller",
      "Exception",
      "R3m\\Io\\Exception\\LocateException",
      "R3m\\Io\\Exception\\UrlEmptyException",
      "R3m\\Io\\Exception\\UrlNotExistException"
    ],
    "extends" : "Controller",
    "implements": null,
    "constant": {
      "DIR" : "__DIR__ . DIRECTORY_SEPARATOR",
      "NAME" : "{{echo('\"')}}{{$this.#parentNode.options.class}}{{echo('\"')}}",
      "COMMAND_TOKEN" : "'token'",
      "COMMAND_INFO" : "'info'",
      "COMMAND" : [
        "{{$this.#parentNode.options.class}}::COMMAND_INFO",
        "{{$this.#parentNode.options.class}}::COMMAND_TOKEN"
      ],
      "DEFAULT_COMMAND" : "{{$this.#parentNode.options.class}}::COMMAND_INFO",
      "EXCEPTION_COMMAND_PARAMETER" : "\"{{literal}}{{$command}}{{/literal}}\"",
      "EXCEPTION_COMMAND" : "'invalid command (' . User::EXCEPTION_COMMAND_PARAMETER . ')' . PHP_EOL"
    },
    "trait": [
      "Package\\R3m\\Io\\Account\\Trait\\User",
      "Package\\R3m\\Io\\Account\\Trait\\App"
    ],
    "function": [
        {
          "name": "__construct",
          "type" : "public",
          "static": false,
          "argument": [
            "App $object"
          ],
          "attribute": [],
          "return_type": [
            "void"
          ],
          "body": [
            "$this->object($object);"
          ]
        },
        {
            "name": "command",
            "type" : "public",
            "static": true,
            "argument": [
              "App $object"
            ],
            "doc_comment": [
              "/**",
              " * @throws Exception",
              " */"
            ],
            "attribute": [
              "#[Route('/blog', name: 'blog_list')]"
            ],
            "return_type": [
              "mixed"
            ],
            "body": [
              "$command = $object->parameter($object, __CLASS__, 1);",
              "if($command === null){",
              "    $command = {{$this.#parentNode.class}}::DEFAULT_COMMAND;",
              "}",
              "if(!in_array($command, {{$this.#parentNode.class}}::COMMAND)){",
              "    $exception = str_replace(",
              "        {{$this.#parentNode.class}}::EXCEPTION_COMMAND_PARAMETER,",
              "        $command,",
              "        {{$this.#parentNode.class}}::EXCEPTION_COMMAND",
              "    );",
              "    throw new Exception($exception);",
              "}",
              "$user = new {{$this.#parentNode.class}}($object);",
              "return $user->{$command}();"
            ]
        },
        {
            "name": "info",
            "type" : "private",
            "static": false,
            "argument": [],
            "attribute": [],
            "return_type": [
              "mixed"
            ],
            "body": [
              "$object = $this->object();",
              "try {",
              "    $name = {{$this.#parentNode.class}}::name(__FUNCTION__, __CLASS__, '/');",
              "    $url = {{$this.#parentNode.class}}::locate($object, $name);",
              "    return {{$this.#parentNode.class}}::response($object, $url);",
              "}",
              "catch (Exception | LocateException | UrlEmptyException | UrlNotExistException $exception) {",
              "    return $exception;",
              "}"
            ]
        }
    ]
  }
}