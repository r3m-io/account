{
  "User" : {
    "class": "{{$options.class}}",
    "use" : [
      "R3m\\Io\\App",
      "R3m\\Io\\Module\\Response",
      "R3m\\Io\\Module\\Controller",
      "Exception",
      "R3m\\Io\\Exception\\LocateException",
      "R3m\\Io\\Exception\\UrlEmptyException",
      "R3m\\Io\\Exception\\UrlNotExistException"
    ],
    "extends" : "Controller",
    "implements": null,
    "constant": {
      "DIR" : "__DIR__ . DIRECTORY_SEPARATOR",
      "NAME" : "{{$options.class}}",
      "COMMAND_TOKEN" : "token",
      "COMMAND_INFO" : "info",
      "COMMAND" : [
        "{{$options.class}}::COMMAND_INFO",
        "{{$options.class}}::COMMAND_TOKEN"
      ],
      "DEFAULT_COMMAND" : "{{$options.class}}::COMMAND_INFO",
      "EXCEPTION_COMMAND_PARAMETER" : "{{$options.command}}",
      "EXCEPTION_COMMAND" : "invalid command ({{$options.command}})\n"
    },
    "trait": [
      "Package\\R3m\\Io\\Account\\Trait\\User",
      "Package\\R3m\\Io\\Account\\Trait\\App"
    ],
    "function": [
      "public function __construct(App $object){\n        $this->object($object);\n    }",
      "/**\n    * @throws Exception\n    */\n    public static function command(App $object){\n        $command = $object->parameter($object, __CLASS__, 1);\n        if($command === null){\n            $command = {{$class}}::DEFAULT_COMMAND;\n        }\n        if(!in_array($command, {{$class}}::COMMAND)){\n            $exception = str_replace(\n                {{$class}}::EXCEPTION_COMMAND_PARAMETER,\n                $command,\n                {{$class}}::EXCEPTION_COMMAND\n            );\n            throw new Exception($exception);\n        }\n        $user = new {{$class}}($object);\n        return $user->{$command}();\n    }",
      "private function info(){\n        $object = $this->object();\n        try {\n            $name = {{$class}}::name(__FUNCTION__, __CLASS__, '/');\n            $url = {{$class}}::locate($object, $name);\n            return {{$class}}::response($object, $url);\n        }\n        catch (Exception | LocateException | UrlEmptyException | UrlNotExistException $exception) {\n            return $exception;\n        }\n    }"
    ]
  }
}